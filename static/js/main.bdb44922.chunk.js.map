{"version":3,"sources":["components/TaskBanner.js","components/TaskRow.js","components/TaskCreator.js","components/UserCreator.js","components/VisibilityControl.js","App.js","reportWebVitals.js","index.js"],"names":["TaskBanner","props","className","userName","taskItems","filter","t","done","length","TaskRow","style","width","task","name","type","checked","onChange","toggleTask","onClick","callbackDel","callbackUp","TaskCreator","useState","newTaskName","setNewTaskName","useEffect","nameTask","console","log","value","e","target","placeholder","createNewTask","UserCreator","newUserName","setNewUserName","setUser","VisibilityControl","isChecked","callback","htmlFor","description","App","setUserName","setTaskItems","showCompleted","setshowCompleted","setNameTask","userData","localStorage","getItem","JSON","parse","data","setItem","stringify","deleteTask","array","tarea","find","index","indexOf","splice","updateTask","map","taskTableRows","doneValue","toDelete","userNameProps","taskName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdb44922.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const TaskBanner = props => (\r\n  <h4 className=\"bg-primary text-white text-center p-4\">\r\n    {props.userName}'s Tasks App ({props.taskItems.filter(t => !t.done).length}{\" \"}\r\n    tasks to do)\r\n  </h4>\r\n);","import React from \"react\";\r\n\r\nexport const TaskRow = props => {\r\n\r\n  const deleteTask = () => {\r\n    props.callbackDel(props.task.name);\r\n  }\r\n\r\n  const updateTask = () => {\r\n    props.callbackUp(props.task.name);\r\n  }\r\n\r\n  return (\r\n    <tr key={props.task.name}>\r\n      <td style={{width:'40%'}}>{props.task.name}</td>\r\n      <td>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={props.task.done}\r\n          onChange={() => props.toggleTask(props.task)}\r\n        />\r\n      </td>\r\n\r\n      <td className=\"d-flex align-items-center\">\r\n        <button className=\"btn btn-danger\" onClick={deleteTask}>\r\n          <i className=\"material-icons\">delete</i>\r\n        </button>\r\n        <button className=\"btn btn-info ml-2\" onClick={updateTask}>\r\n          <i className=\"material-icons\">update</i>\r\n        </button>\r\n      </td>\r\n\r\n      {/*\r\n      {props.toDelete && (\r\n        <td className=\"d-flex align-items-center\">\r\n          <button className=\"btn btn-danger\" onClick={deleteTask}>\r\n            <i class=\"material-icons\">delete</i>\r\n          </button>\r\n          <button className=\"btn btn-info ml-2\" onClick={deleteTask}>\r\n            <i class=\"material-icons\">update</i>\r\n          </button>\r\n        </td>\r\n      )}\r\n      */}\r\n\r\n    </tr>\r\n  );\r\n\r\n};","import React, { useState, useEffect } from \"react\";\r\n\r\nexport const TaskCreator = props => {\r\n\r\n    const [newTaskName, setNewTaskName] = useState(\"\");\r\n\r\n    const updateNewTaskValue = e => setNewTaskName(e.target.value);\r\n\r\n    const createNewTask = () => {\r\n        props.createNewTask(newTaskName);\r\n        setNewTaskName('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.nameTask === \"\") {\r\n          setNewTaskName(\"\");\r\n        } else {\r\n            console.log(\"name:\" + props.nameTask);\r\n            setNewTaskName(props.nameTask);\r\n        }\r\n        \r\n    }, [props.nameTask]);\r\n    \r\n    return (\r\n        <div className=\"my-1 pt-2\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={newTaskName}\r\n                onChange={updateNewTaskValue}\r\n                placeholder=\"Task name\"\r\n            />\r\n            <button className=\"btn btn-primary mt-1\" onClick={createNewTask}>\r\n                {props.nameTask === \"\" ? \"Add Task\" : \"Update Task\"}\r\n            </button>\r\n        </div>\r\n    );\r\n};","import React, { useState } from \"react\";\r\n\r\nexport const UserCreator = props => {\r\n    \r\n    const [newUserName, setNewUserName] = useState(\"\");\r\n\r\n    const updateNewUserValue = e => setNewUserName(e.target.value);\r\n\r\n    const createNewUser = () => {\r\n        props.setUser(newUserName);\r\n        setNewUserName('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"my-1\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={newUserName}\r\n                onChange={updateNewUserValue}\r\n                placeholder=\"User name\"\r\n            />\r\n            <button className=\"btn btn-primary mt-1\" onClick={createNewUser}>\r\n                Set User\r\n      </button>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\n\r\nexport const VisibilityControl = props => {\r\n    return (\r\n        <div className=\"form-check\">\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                checked={props.isChecked}\r\n                onChange={e => props.callback(e.target.checked)}\r\n            />\r\n            <label htmlFor=\"form-check-label\">\r\n                Show {props.description}\r\n            </label>\r\n        </div>\r\n    );\r\n};","import React, { useState, useEffect } from \"react\";\n\nimport { TaskBanner } from \"./components/TaskBanner\";\nimport { TaskRow } from \"./components/TaskRow\";\nimport { TaskCreator } from \"./components/TaskCreator\";\nimport { UserCreator } from \"./components/UserCreator\";\nimport { VisibilityControl } from \"./components/VisibilityControl\";\n\nfunction App() {\n\n  //-----------------------------State------------------------------------\n\n  const [userName, setUserName] = useState(\"\");\n  const [taskItems, setTaskItems] = useState([\n    { name: \"Task One\", done: false },\n    { name: \"Task Two\", done: false },\n    { name: \"Task Three\", done: true },\n    { name: \"Task Four\", done: false }\n  ]);\n  \n  const [showCompleted, setshowCompleted] = useState(true);\n\n  const [nameTask, setNameTask] = useState(\"\");\n\n\n  //-------------------------------Effect------------------------------------\n\n  useEffect(() => {\n\n    let userData = localStorage.getItem(\"user\");\n\n    if (userData != null) {\n      setUserName(JSON.parse(userData));\n    } else {\n      setUserName(\"Daniel\");\n    }\n\n    let data = localStorage.getItem(\"tasks\");\n\n    if (data != null) {\n      setTaskItems(JSON.parse(data))\n    } else {\n      setTaskItems([\n        { name: \"Task One\", done: false },\n        { name: \"Task Two\", done: false },\n        { name: \"Task Three\", done: true },\n        { name: \"Task Four\", done: false }\n      ]);\n      setshowCompleted(true);\n    }\n  }, []); //Ejecuta este effect cuando carga la aplicacion.\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(taskItems));\n  }, [taskItems]); //Ejecuta esta funcion cada vez que el taskItem cambia el State.\n\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(userName));\n  }, [userName]);\n\n\n  //---------------------------Methods--------------------------\n\n  const createNewUser = userNameProps => {\n\n    setUserName(userNameProps);\n\n  }\n\n  const createNewTask = taskName => {\n\n    if (nameTask === \"\") {\n\n      if (!taskItems.find(t => t.name === taskName)) {\n        setTaskItems([...taskItems, { name: taskName, done: false }]);\n      }\n\n    } else {\n\n      setTaskItems(taskItems.map(task => (task.name === nameTask ? { ...task, name: taskName } : task)));\n      setNameTask(\"\");\n    }\n\n  };\n\n  const deleteTask = t => {\n    console.log(t);\n\n    var array = [...taskItems]; // make a separate copy of the array\n    var tarea = taskItems.find(task => task.name === t);\n    var index = array.indexOf(tarea);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      //this.setState({ people: array });\n      setTaskItems(array);\n      console.log(index);\n    }\n  };\n\n  const updateTask = t => {\n    console.log(\"Update\");\n\n    setNameTask(t);\n\n  }\n\n  const toggleTask = task =>\n    setTaskItems(\n      taskItems.map(t => (t.name === task.name ? { ...t, done: !t.done } : t))\n    );\n\n  const taskTableRows = doneValue =>\n    taskItems\n      .filter(task => task.done === doneValue)\n      .map(task => (\n        <TaskRow \n            key={task.name}\n            task={task} \n            toggleTask={toggleTask} \n            toDelete={doneValue} \n            callbackDel={deleteTask}\n            callbackUp={updateTask} />\n      ));\n\n  return (\n\n    <div>\n      <TaskBanner userName={userName} taskItems={taskItems} />\n      <div className=\"container-fluid\">\n\n        <UserCreator setUser={createNewUser} />\n\n        <TaskCreator {...{createNewTask, nameTask}} />\n\n        <table className=\"table table-striped table-bordered mt-3\">\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Done</th>\n              <th>Acción</th>\n            </tr>\n          </thead>\n          <tbody>{taskTableRows(false)}</tbody>\n        </table>\n\n        <div className=\"bg-secondary text-white text-center p-2\">\n          <VisibilityControl\n            description=\"Completed Tasks\"\n            isChecked={showCompleted}\n            callback={checked => setshowCompleted(checked)}\n          />\n        </div>\n\n        {showCompleted && (\n          <table className=\"table table-striped table-bordered\">\n            <thead>\n              <tr>\n                <th>Description</th>\n                <th>Done</th>\n                <th>Acción</th>\n              </tr>\n            </thead>\n            <tbody>{taskTableRows(true)}</tbody>\n          </table>\n        )}\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}